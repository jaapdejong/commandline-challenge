# Print "hello world".
# Hint: There are many ways to print text on
# the command line, one way is with the 'echo'
# command.
# 
# Try it below and good luck!
# 
bash(0)> echo "hello world"
	hello world
# üëç üëç üëç  Correct!

# You have a new challenge!
# Print the current working directory.
# 
bash(0)> pwd
	/var/challenges/current_working_directory
# üëç üëç üëç  Correct!

# You have a new challenge!
# List all of the files in the current
# directory, one file per line.
# 
bash(0)> ls|cat
	README
# üëç üëç üëç  Correct!

# You have a new challenge!
# There is a file named "access.log" in the
# current directory. Print the contents.
# 
bash(0)> cat access.log
	163.56.115.58 - - [09/Jan/2017:22:29:57 +0100] "GET /posts/2/display HTTP/1.0" 200 3240
	75.113.188.234 - - [09/Jan/2017:22:30:43 +0100] "GET /posts/foo?appID=xxxx HTTP/1.0" 200 1116
	69.16.40.148 - - [09/Jan/2017:22:34:33 +0100] "GET /pages/create HTTP/1.0" 500 3471
	225.219.54.140 - - [09/Jan/2017:22:35:30 +0100] "GET /posts/foo?appID=xxxx HTTP/1.0" 500 2477
	207.243.19.2 - - [09/Jan/2017:22:38:03 +0100] "GET /bar/create HTTP/1.0" 200 1116
	199.37.62.156 - - [09/Jan/2017:22:42:18 +0100] "GET /posts/1/display HTTP/1.0" 200 2477
	55.74.240.123 - - [09/Jan/2017:22:44:25 +0100] "POST /posts/1/display HTTP/1.0" 200 3471
	251.111.109.143 - - [09/Jan/2017:22:49:02 +0100] "GET /posts/foo?appID=xxxx HTTP/1.0" 200 2477
	101.163.230.250 - - [09/Jan/2017:22:52:31 +0100] "DELETE /posts/2/display HTTP/1.0" 404 2477
	200.19.168.148 - - [09/Jan/2017:22:57:11 +0100] "GET /posts/foo?appID=xxxx HTTP/1.0" 200 3471
# üëç üëç üëç  Correct!

# You have a new challenge!
# Print the last 5 lines of "access.log".
# 
bash(0)> tail -5 access.log
	199.37.62.156 - - [09/Jan/2017:22:42:18 +0100] "GET /posts/1/display HTTP/1.0" 200 2477
	55.74.240.123 - - [09/Jan/2017:22:44:25 +0100] "POST /posts/1/display HTTP/1.0" 200 3471
	251.111.109.143 - - [09/Jan/2017:22:49:02 +0100] "GET /posts/foo?appID=xxxx HTTP/1.0" 200 2477
	101.163.230.250 - - [09/Jan/2017:22:52:31 +0100] "DELETE /posts/2/display HTTP/1.0" 404 2477
	200.19.168.148 - - [09/Jan/2017:22:57:11 +0100] "GET /posts/foo?appID=xxxx HTTP/1.0" 200 3471
# üëç üëç üëç  Correct!

# You have a new challenge!
# There is a file named "access.log" in the
# current working directory. Print all lines
# in this file that contains the string "GET".
# 
bash(0)> grep GET access.log
	163.56.115.58 - - [09/Jan/2017:22:29:57 +0100] "GET /posts/2/display HTTP/1.0" 200 3240
	75.113.188.234 - - [09/Jan/2017:22:30:43 +0100] "GET /posts/foo?appID=xxxx HTTP/1.0" 200 1116
	69.16.40.148 - - [09/Jan/2017:22:34:33 +0100] "GET /pages/create HTTP/1.0" 500 3471
	225.219.54.140 - - [09/Jan/2017:22:35:30 +0100] "GET /posts/foo?appID=xxxx HTTP/1.0" 500 2477
	207.243.19.2 - - [09/Jan/2017:22:38:03 +0100] "GET /bar/create HTTP/1.0" 200 1116
	199.37.62.156 - - [09/Jan/2017:22:42:18 +0100] "GET /posts/1/display HTTP/1.0" 200 2477
	251.111.109.143 - - [09/Jan/2017:22:49:02 +0100] "GET /posts/foo?appID=xxxx HTTP/1.0" 200 2477
	200.19.168.148 - - [09/Jan/2017:22:57:11 +0100] "GET /posts/foo?appID=xxxx HTTP/1.0" 200 3471
# üëç üëç üëç  Correct!

# You have a new challenge!
# Print all files, one per line (not the path, just the file)
# that contain the string "500".
# 
bash(0)> grep -rl 500 
	access.log
	access.log.1
	README
# üëç üëç üëç  Correct!

# You have a new challenge!
# Print the relative file paths, one path
# per line for all filenames that start with
# "access.log" in the current directory.
# 
bash(0)> find | grep access.log
	./access.log.2
	./access.log
	./access.log.1
# üëç üëç üëç  Correct!

# You have a new challenge!
# Print all matching lines (without the filename
# or the file path) in all files under the current
# directory that start with "access.log" that
# contain the string "500". Note that there are no
# files named "access.log" in the current directory,
# you will need to search recursively.
# 
bash(0)> find . -name access.log* -exec grep 500 {} \;
	69.16.40.148 - - [09/Jan/2017:22:34:33 +0100] "GET /pages/create HTTP/1.0" 500 3471
	225.219.54.140 - - [09/Jan/2017:22:35:30 +0100] "GET /posts/foo?appID=xxxx HTTP/1.0" 500 2477
	2.71.250.27 - - [09/Jan/2017:22:41:26 +0100] "GET /pages/create HTTP/1.0" 500 2477
# üëç üëç üëç  Correct!

# You have a new challenge!
# Extract all IP addreses from files
# that start with "access.log" printing one
# IP address per line.
# 
bash(1)> find . -name access.log* -exec cut -d" " -f 1 {} \;
	163.56.115.58
	75.113.188.234
	69.16.40.148
	225.219.54.140
	207.243.19.2
	199.37.62.156
	55.74.240.123
	251.111.109.143
	101.163.230.250
	200.19.168.148
	108.68.174.15
	17.2.20.139
	28.151.137.59
	199.150.241.179
	2.71.250.27
	17.137.186.194
	151.84.119.34
	4.180.204.195
	9.230.96.54
	157.143.233.21
# üëç üëç üëç  Correct!

# You have a new challenge!
# Delete all of the files in this challenge
# directory including all subdirectories and
# their contents.
# 
bash(1)> rm -rf * .[a-zA-Z0-9]*
# üëç üëç üëç  Correct!

# You have a new challenge!
# Count the number of files in the current
# working directory. Print the number of
# files as a single integer.
# 
bash(0)> ls|wc -l
	2
# üëç üëç üëç  Correct!

# You have a new challenge!
# Print the contents of access.log
# sorted.
# 
bash(0)> sort access.log
	101.163.230.250 - - [09/Jan/2017:22:52:31 +0100] "DELETE /posts/2/display HTTP/1.0" 404 2477
	163.56.115.58 - - [09/Jan/2017:22:29:57 +0100] "GET /posts/2/display HTTP/1.0" 200 3240
	199.37.62.156 - - [09/Jan/2017:22:42:18 +0100] "GET /posts/1/display HTTP/1.0" 200 2477
	200.19.168.148 - - [09/Jan/2017:22:57:11 +0100] "GET /posts/foo?appID=xxxx HTTP/1.0" 200 3471
	207.243.19.2 - - [09/Jan/2017:22:38:03 +0100] "GET /bar/create HTTP/1.0" 200 1116
	225.219.54.140 - - [09/Jan/2017:22:35:30 +0100] "GET /posts/foo?appID=xxxx HTTP/1.0" 500 2477
	251.111.109.143 - - [09/Jan/2017:22:49:02 +0100] "GET /posts/foo?appID=xxxx HTTP/1.0" 200 2477
	55.74.240.123 - - [09/Jan/2017:22:44:25 +0100] "POST /posts/1/display HTTP/1.0" 200 3471
	69.16.40.148 - - [09/Jan/2017:22:34:33 +0100] "GET /pages/create HTTP/1.0" 500 3471
	75.113.188.234 - - [09/Jan/2017:22:30:43 +0100] "GET /posts/foo?appID=xxxx HTTP/1.0" 200 1116
# üëç üëç üëç  Correct!

# You have a new challenge!
# Print the number of lines
# in access.log that contain the string
# "GET".
# 
bash(0)> grep -c GET access.log
	8
# üëç üëç üëç  Correct!

# You have a new challenge!
# The file split-me.txt contains a list of
# numbers separated by a ';' character.
# Split the numbers on the ';' character,
# one number per line.
# 
bash(1)> sed "s:;:\n:g" split-me.txt
	1
	2
	3
	4
	5
	6
	7
	8
	9
	10
# üëç üëç üëç  Correct!

# You have a new challenge!
# Print the numbers 1 to 100 separated
# by spaces.
# 
bash(0)> echo $(seq 1 100)
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 
58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100
# üëç üëç üëç  Correct!

# You have a new challenge!
# There are files in this challenge with
# different file extensions.
# Remove all files with the .doc extension
# recursively in the current working directory.
# 
bash(0)> find . -name '*.doc' -exec rm {} \;
# üëç üëç üëç  Correct!

# You have a new challenge!
# There are files in this challenge with
# different file extensions.
# Remove all files without the .txt and .exe extensions
# recursively in the current working directory.
# 
bash(0)> find . ! -name '*.exe' -a ! -name '*.txt' -exec rm {} \;
# üëç üëç üëç  Correct!

# You have a new challenge!
# This challenge has text files (with a .txt extension)
# that contain the phrase "challenges are difficult".
# Delete this phrase recursively from all text files.
# Note that some files are in subdirectories so you will
# need to search for them.
# 
bash(0)> find . -name '*.txt' -exec sed -i 's:challenges are difficult::g' {} \;
# üëç üëç üëç  Correct!

# You have a new challenge!
# The file sum-me.txt have a list of numbers,
# one per line. Print the sum of these numbers.
# 
bash(0)> awk '{t+=$1} END{print t}' sum-me.txt
	42
# üëç üëç üëç  Correct!

# You have a new challenge!
# Print all files in the current directory
# recursively without the leading directory path.
# 
bash(0)> for i in $(find -type f -exec ls {} \; ) ; do basename $i ; done|sort -u
	README
	animi.doc
	beatae.flac
	corporis.xls
	error.doc
	libero.xls
	necessitatibus.doc
	odit.doc
	totam
# üëç üëç üëç  Correct!

# You have a new challenge!
# Remove the extension from all files in
# the current directory recursively.
# 
bash(0)> for i in $(find -name '*.*' -type f) ; do d=$(dirname $i)/$(basename $i|sed 's:\..*::') ;  mv $i $d ; done
# üëç üëç üëç  Correct!

# You have a new challenge!
# The files in this challenge contain spaces.
# List all of the files (filenames only) in the
# current directory but replace all spaces with
# a '.' character.
# 
bash(0)> ls | tr " " "."
	Adam.Simpson
	Alexis.Stein
	Allison.Brown
	Amy.Anderson
	Angel.Saunders
	Brad.Michael
	Briana.Wilson
	Carrie.Alexander
	Christine.Valdez
	Christopher.Miller
	Claudia.Mccormick
	Corey.Bird
	Courtney.Miller
	Crystal.Dunn
	Crystal.Valdez
	Erica.Richardson
	James.Harper
	James.Roberts
	Jared.Hill.DVM
	John.Nguyen
	Jorge.Ross
	Joseph.Hurst
	Karen.Ramirez
	Kevin.Price
	Kimberly.Parker
	Lori.Macias
	Luke.Mason
	Lynn.Robinson
	Mallory.Peterson
	Marie.Gutierrez
	Matthew.Romero
	Michaela.Hobbs
	Molly.Stevens
	Mr..James.Lopez
	Mr..Shawn.Martin
	Mrs..Jade.Clark
	Olivia.Irwin
	Parker.Gilbert
	README
	Robert.Gregory
	Robert.Hill
	Sarah.Hill
	Scott.Rice
	Sheri.Bishop
	Tamara.Anderson
	Tammy.Galloway
	Terri.Young
	Thomas.Parks
	Thomas.Washington
	Tiffany.Clark
	Yvonne.Myers
# üëç üëç üëç  Correct!

# You have a new challenge!
# There are a mix of files in this directory
# that start with letters and numbers. Print
# the filenames (just the filenames) of all
# files that start with a number recursively
# in the current directory.
# 
bash(0)> find . -name '[0-9]*' -type f | while read i ; do basename "$i" ; done
	540Katherine Jones
	78Michelle Spencer
	757Robert Marquez
	293Linda Bennett
	335John Joseph
	593Brett Martin
	04Carrie Alexander
	436Teresa Owens
	639Charles Ferguson
	477Thomas Pierce MD
	778Holly Archer
	3maxime.mp3
	388Andrew Carter
	682Terri Jones
	42Robert Hill
	511Tammy Welch
	402Nancy Henson
	48Thomas Allen
	974Michael Bowman
	25Brandon Mcdonald
	132Rebecca Rubio
	670James Jacobs
	99blanditiis.avi
	737Jeffrey Davis
# üëç üëç üëç  Correct!
# You have a new challenge!
# Print the 25th line of the file faces.txt
# 
bash(0)> head -25 faces.txt|tail -1
	¬Ø\_(„ÉÑ)_/¬Ø
# üëç üëç üëç  Correct!

# You have a new challenge!
# Print the file faces.txt, but only print the first instance of each
# duplicate line, even if the duplicates don't appear next to each other.
# Note that order matters so don't sort the lines before removing duplicates.
# 
bash(0)> awk '{if (aaa[$0] == "") {print $0 ; aaa[$0]++}}' faces.txt
	(‚óï‚Äø‚óï)
	(^ÃÆ^)
	 ò‚Äø ò
	‡≤†_‡≤†
	‡≤†‚å£‡≤†
	‡≤†‚Äø‡≤†
	( ò‚Äø ò)
	(‡≤†_‡≤†)
	¬Ø\_(„ÉÑ)_/¬Ø
	(‡≤†‚å£‡≤†
	‡≤†‡≤†‚å£‡≤†)
	(‡≤†‚Äø‡≤†)
	Ÿ©‚óîÃØ‚óî€∂
	„ÉΩ‡ºº‡∫àŸÑÕú‡∫à‡ºΩÔæâ
	‚ô•‚Äø‚ô•
	‚óîÃØ‚óî
	‚äôÔπè‚äô
	(¬¨_¬¨)
	(Ôºõ‰∏Ä_‰∏Ä)
	(Õ°¬∞ Õú ñ Õ°¬∞)
	(¬∞ Õú ñ ¬∞)
	¬Ø\(¬∞_o)/¬Ø
	( Ôæü„ÉÆÔæü)
	(Ô∏∫Ô∏πÔ∏∫)
# üëç üëç üëç  Correct!

# You have a new challenge!
# The following excerpt from War and Peace is saved to
# the file 'war_and_peace.txt':
# 
# She is betraying us! Russia alone must save Europe.
# Our gracious sovereign recognizes his high vocation
# and will be true to it. That is the one thing I have
# faith in! Our good and wonderful sovereign has to
# perform the noblest role on earth, and he is so virtuous
# and noble that God will not forsake him. He will fulfill
# his vocation and crush the hydra of revolution, which
# has become more terrible than ever in the person of this
# murderer and villain!
# 
# The file however has been corrupted, there are random '!'
# marks inserted throughout.  Print the original text.
# 
bash(0)> sed -e 's:!!*:!:g' -e 's:!\([^ ]\):\1:g' -e 's:\([^a-z]\)!:\1:g' -e 's:!\( [a-z]\):\1:g' war_and_peace.txt
	She is betraying us! Russia alone must save Europe.
	Our gracious sovereign recognizes his high vocation
	and will be true to it. That is the one thing I have
	faith in! Our good and wonderful sovereign has to
	perform the noblest role on earth, and he is so virtuous
	and noble that God will not forsake him. He will fulfill
	his vocation and crush the hydra of revolution, which
	has become more terrible than ever in the person of this
	murderer and villain!
# üëç üëç üëç  Correct!

# You have a new challenge!
# access.log.1 and access.log.2 are http server logs. Print the IP
# addresses common to both files, one per line.
# 
bash(0)> for i in $(cut -d" " -f1 access.log.1) ; do if grep -q "^$i " access.log.2 ; then echo "$i" ; fi ; done|sort
	108.68.174.15
	17.137.186.194
	2.71.250.27
	28.151.137.59
# üëç üëç üëç  Correct!

